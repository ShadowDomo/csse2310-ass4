#include "mapper.h"



/** Entry point to Roc program **/
int main(int argc, char** argv) {
    // get planeID
    char* planeID = argv[1];

    // get mapper port - either number or a dash
    char* mapper_port = argv[2];

    // has_port is true if a mapper port was inputted
    bool has_port = true;
    if (strcmp(mapper_port, "-") == 0) {
        has_port = false;
    }

    // initialize state
    WorldState* worldState = malloc(sizeof(WorldState));
    worldState->countAirports = 0;

    // find destinations
    for (int i = 3; i < argc; ++i) {
        allocate_airports(worldState);
        worldState->countAirports++;
        // rest holds the string unconverted part of conversion
        char* rest;
        int result = (int) strtol(argv[i], &rest, 10);
        // if was int
        if (result != 0 && strlen(rest) == 0) {
            // note we use i - 3 because destinations start from arg 3
            worldState->airports[i - 3]->port = result;
        } else {
            worldState->airports[i - 3]->id = malloc(sizeof(char) * 80);
            strncpy(worldState->airports[i - 3]->id, argv[i], 80);
        }
    }







    fflush(stdout);

    return 0;
}